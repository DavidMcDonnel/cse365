/*This is a 4 bit carry look ahead adder
  This functions off of the propogate and generate chip,
  and utilizes the equation:
  c[i] = OR(AND(A,B),AND(XOR(A,B),C[i-1])
  the last output bit out[4] is the carry out.
*/
CHIP carryLookAheadAdder4{
	IN a[4],b[4],cIn;
	OUT out[5];

	PARTS:
	//call propogate and carry for each bit
	pAndG(a=a[0],b=b[0],prop=p0,gen=g0);
	pAndG(a=a[1],b=b[1],prop=p1,gen=g1);
	pAndG(a=a[2],b=b[2],prop=p2,gen=g2);
	pAndG(a=a[3],b=b[3],prop=p3,gen=g3);

	//do XOR(a[i],b[i],out[i]) before XOR(out[i],c[i-1])
	XOR(a=a[0],b=b[0],out=preBit0);
	XOR(a=a[1],b=b[1],out=preBit1);
	XOR(a=a[2],b=b[2],out=preBit2);
	XOR(a=a[3],b=b[3],out=preBit3);

	//generate last term of c[i]
	AND(a=cIn,b=p0,out=pCIN);
	AND(a=pCIN,b=p1,out=p1p0CIN);
	AND(a=p1p0CIN,b=p2,out=p2p1p0CIN);
	AND(a=p2p1p0CIN,b=p3,out=p3p2p1p0CIN);

	//generate second to last term of c[i]
	AND(a=p1,b=g0,out=p1G0);
	AND(a=p2,b=p1G0,out=p2p1G0);
	AND(a=p3,b=p2p1G0,out=p3p2p1G0);

	//generate third to last term of c[i]
	AND(a=g1,b=p2,out=p2g1);
	AND(a=p2g1,b=p3,out=p3p2g1);

	//generate fourth to last term of c[i]
	AND(a=p3,b=g2,out=p3g2);

	//or terms of c0
	OR(a=g0,b=p0CIN,out=c0);

	//or terms of c1
	OR(a=p1g0,b=p1p0CIN,out=c1_pre0);
	OR(a=g1,b=c0_pre0,out=c1);

	//or terms of c2
	OR(a=p2p1g0,b=p2p1p0CIN,out=c2_pre0);
	OR(a=p2g1,b=c2_pre0,out=c2_pre1);
	OR(a=g2,b=c2_pre1,out=c2);

	//or terms of c3
	OR(a=p3p2p1g0,b=p3p2p1p0CIN,out=c3_pre0);
	OR(a=p3p2g1,b=c3_pre0,out=c3_pre1);
	OR(a=p3g2,b=c3_pre1,out=c3_pre2);
	OR(a=g3,b=c3_pre2,out=out[4]);

	//generate final sums with XOR(XOR(a[i],b[i]),c[i])
	XOR(a=a[preBit0],b=cIn,out=out[0]);
	XOR(a=a[preBit1],b=c0,out=out[1]);
	XOR(a=a[preBit2],b=c1,out=out[2]);
	XOR(a=a[preBit3],b=c2,out=out[3]);
}