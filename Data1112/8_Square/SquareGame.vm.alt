function SquareGame.new 0
  push constant 2
  call Memory.alloc 1
  pop pointer 0
  // let square = Square . new ( 0   , 0   , 30    )    ; 
  push constant 0
  push constant 0
  push constant 30
  call Square.new 3
  pop this 0
  // let direction = 0   ; 
  push constant 0
  pop this 1
  // return this   ; 
  push pointer 0
  return
function SquareGame.dispose 0
  push argument 0
  pop pointer 0
  // do square . dispose (  )  ; 
  push this 0
  call Square.dispose 1
  pop temp 0
  // do Memory . deAlloc ( this    )  ; 
  push pointer 0
  call Memory.deAlloc 1
  pop temp 0
  // return ; 
  push constant 0
  return
function SquareGame.run 2
  push argument 0
  pop pointer 0
  // let exit = false   ; 
  push constant 0
  pop local 1
  // while ( ~ exit    ) { while ( key  = 0   ) { let key = Keyboard . keyPressed (  )    ;  do moveSquare (  )  ;   }  if ( key  = 81   ) { let exit = true   ;   }  if ( key  = 90   ) { do square . decSize (  )  ;   }  if ( key  = 88   ) { do square . incSize (  )  ;   }  if ( key  = 131   ) { let direction = 1   ;   }  if ( key  = 133   ) { let direction = 2   ;   }  if ( key  = 130   ) { let direction = 3   ;   }  if ( key  = 132   ) { let direction = 4   ;   }  while ( ~ ( key  = 0   )    ) { let key = Keyboard . keyPressed (  )    ;  do moveSquare (  )  ;   }   } 
label WHILE_EXP0
  push local 1
  not
  not
  if-goto WHILE_END0
  // while ( key  = 0   ) { let key = Keyboard . keyPressed (  )    ;  do moveSquare (  )  ;   } 
label WHILE_EXP1
  push local 0
  push constant 0
  eq
  not
  if-goto WHILE_END1
  // let key = Keyboard . keyPressed (  )    ; 
  call Keyboard.keyPressed 0
  pop local 0
  // do moveSquare (  )  ; 
  push pointer 0
  call SquareGame.moveSquare 1
  pop temp 0
  goto WHILE_EXP1
label WHILE_END1
  // if ( key  = 81   ) { let exit = true   ;   } 
  push local 0
  push constant 81
  eq
  not
  if-goto IF_FALSE0
  // let exit = true   ; 
  push constant 0
  not
  pop local 1
label IF_FALSE0
  // if ( key  = 90   ) { do square . decSize (  )  ;   } 
  push local 0
  push constant 90
  eq
  not
  if-goto IF_FALSE1
  // do square . decSize (  )  ; 
  push this 0
  call Square.decSize 1
  pop temp 0
label IF_FALSE1
  // if ( key  = 88   ) { do square . incSize (  )  ;   } 
  push local 0
  push constant 88
  eq
  not
  if-goto IF_FALSE2
  // do square . incSize (  )  ; 
  push this 0
  call Square.incSize 1
  pop temp 0
label IF_FALSE2
  // if ( key  = 131   ) { let direction = 1   ;   } 
  push local 0
  push constant 131
  eq
  not
  if-goto IF_FALSE3
  // let direction = 1   ; 
  push constant 1
  pop this 1
label IF_FALSE3
  // if ( key  = 133   ) { let direction = 2   ;   } 
  push local 0
  push constant 133
  eq
  not
  if-goto IF_FALSE4
  // let direction = 2   ; 
  push constant 2
  pop this 1
label IF_FALSE4
  // if ( key  = 130   ) { let direction = 3   ;   } 
  push local 0
  push constant 130
  eq
  not
  if-goto IF_FALSE5
  // let direction = 3   ; 
  push constant 3
  pop this 1
label IF_FALSE5
  // if ( key  = 132   ) { let direction = 4   ;   } 
  push local 0
  push constant 132
  eq
  not
  if-goto IF_FALSE6
  // let direction = 4   ; 
  push constant 4
  pop this 1
label IF_FALSE6
  // while ( ~ ( key  = 0   )    ) { let key = Keyboard . keyPressed (  )    ;  do moveSquare (  )  ;   } 
label WHILE_EXP2
  push local 0
  push constant 0
  eq
  not
  not
  if-goto WHILE_END2
  // let key = Keyboard . keyPressed (  )    ; 
  call Keyboard.keyPressed 0
  pop local 0
  // do moveSquare (  )  ; 
  push pointer 0
  call SquareGame.moveSquare 1
  pop temp 0
  goto WHILE_EXP2
label WHILE_END2
  goto WHILE_EXP0
label WHILE_END0
  // return ; 
  push constant 0
  return
function SquareGame.moveSquare 0
  push argument 0
  pop pointer 0
  // if ( direction  = 1   ) { do square . moveUp (  )  ;   } 
  push this 1
  push constant 1
  eq
  not
  if-goto IF_FALSE7
  // do square . moveUp (  )  ; 
  push this 0
  call Square.moveUp 1
  pop temp 0
label IF_FALSE7
  // if ( direction  = 2   ) { do square . moveDown (  )  ;   } 
  push this 1
  push constant 2
  eq
  not
  if-goto IF_FALSE8
  // do square . moveDown (  )  ; 
  push this 0
  call Square.moveDown 1
  pop temp 0
label IF_FALSE8
  // if ( direction  = 3   ) { do square . moveLeft (  )  ;   } 
  push this 1
  push constant 3
  eq
  not
  if-goto IF_FALSE9
  // do square . moveLeft (  )  ; 
  push this 0
  call Square.moveLeft 1
  pop temp 0
label IF_FALSE9
  // if ( direction  = 4   ) { do square . moveRight (  )  ;   } 
  push this 1
  push constant 4
  eq
  not
  if-goto IF_FALSE10
  // do square . moveRight (  )  ; 
  push this 0
  call Square.moveRight 1
  pop temp 0
label IF_FALSE10
  // do Sys . wait ( 5    )  ; 
  push constant 5
  call Sys.wait 1
  pop temp 0
  // return ; 
  push constant 0
  return
